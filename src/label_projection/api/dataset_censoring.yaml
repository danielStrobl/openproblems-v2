functionality:
  arguments:
    - name: "--input"
      __inherits__: anndata_preprocessed.yaml
    - name: "--output_train"
      __inherits__: anndata_train.yaml
      direction: output
    - name: "--output_test"
      __inherits__: anndata_test.yaml
      direction: output
    - name: "--output_solution"
      __inherits__: anndata_solution.yaml
      direction: output
  # test_resources:
  #   # A custom python script with additional checks
  #   - type: python_script
  #     path: format_check.py
  #     text: |
  #       import anndata as ad

  #       input = ad.read_h5ad(par["input"])
  #       output_train = ad.read_h5ad(par["output_train"])
  #       output_test = ad.read_h5ad(par["output_test"])
  #       output_solution = ad.read_h5ad(par["output_solution"])

  #       print("Checking dimensions")
  #       assert input.n_obs == output_train.n_obs + output_test.n_obs
  #       assert output_test.n_obs == output_solution.n_obs
  #       assert input.n_vars == output_train.n_vars
  #       assert input.n_vars == output_test.n_vars
        
  #       print("Checking whether data from input was copied properly to output")
  #       assert input.uns["dataset_id"] == output_train.uns["dataset_id"]
  #       assert input.uns["raw_dataset_id"] == output_train.uns["raw_dataset_id"]
  #       assert input.uns["dataset_id"] == output_test.uns["dataset_id"]
  #       assert input.uns["raw_dataset_id"] == output_test.uns["raw_dataset_id"]
  #       assert input.uns["dataset_id"] == output_solution.uns["dataset_id"]
  #       assert input.uns["raw_dataset_id"] == output_solution.uns["raw_dataset_id"]

  #       # todo: check .obs and .layers

  #       print("All checks succeeded!")
