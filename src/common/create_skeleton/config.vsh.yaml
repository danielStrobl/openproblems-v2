functionality:
  name: create_skeleton
  namespace: common
  description: |
    Create a skeleton Viash component.
    
    Usage:
    ```
    bin/create_skeleton --task denoising --comp_type method --language r --name foo --output src/denoising/method/foo
    ```
  arguments:
    - name: "--src"
      type: "file"
      default: "./src"
      description: "The source directory of the openproblems-v2 repository."
    - type: string
      name: --task
      description: Which task the component will be added to.
      example: denoising
    - type: string
      name: --comp_type
      example: metric
      description: The type of component to create.
      choices: ['metric', 'method', 'negative_control', 'positive_control']
    - type: string
      name: --language
      description: Which scripting language to use. Options are 'python', 'r'.
      default: python
      choices: [python, r]
    - type: string
      name: --name
      example: new_comp
      description: Name of the new method, formatted in snake case.
    - type: file
      name: --output
      direction: output
      required: true
      description: Path to the component directory. 
  resources:
    - type: python_script
      path: script.py
  test_resources:
    - type: python_script
      path: test.py
    - path: ../../../src
      dest: openproblems-v2/src
platforms:
  - type: docker
    image: python:3.10-slim
    setup:
      - type: python
        pip: ruamel.yaml
  - type: nextflow


